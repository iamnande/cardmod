// Code generated by entc, DO NOT EDIT.

package refinement

const (
	// Label holds the string label denoting the refinement type in the database.
	Label = "refinement"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldSource holds the string denoting the source field in the database.
	FieldSource = "source"
	// FieldTarget holds the string denoting the target field in the database.
	FieldTarget = "target"
	// FieldNumerator holds the string denoting the numerator field in the database.
	FieldNumerator = "numerator"
	// FieldDenominator holds the string denoting the denominator field in the database.
	FieldDenominator = "denominator"
	// Table holds the table name of the refinement in the database.
	Table = "refinements"
)

// Columns holds all SQL columns for refinement fields.
var Columns = []string{
	FieldID,
	FieldSource,
	FieldTarget,
	FieldNumerator,
	FieldDenominator,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// SourceValidator is a validator for the "source" field. It is called by the builders before save.
	SourceValidator func(string) error
	// TargetValidator is a validator for the "target" field. It is called by the builders before save.
	TargetValidator func(string) error
	// NumeratorValidator is a validator for the "numerator" field. It is called by the builders before save.
	NumeratorValidator func(int32) error
	// DenominatorValidator is a validator for the "denominator" field. It is called by the builders before save.
	DenominatorValidator func(int32) error
)
