syntax = "proto3";

package iamnande.cardmod.magic.v1;

option go_package = "github.com/iamnande/cardmod/pkg/api/magicv1;magicv1";

import "validate/validate.proto";
import "google/api/annotations.proto";
import "iamnande/cardmod/magic/v1/magic.proto";

// Magic Service
service MagicAPI {

    // ListMagics lists all available magic resources.
    rpc ListMagics(ListMagicsRequest) returns (ListMagicsResponse) {
        option (google.api.http) = {
            get: "/v1/magics"
        };
    }

    // GetMagic gets a single magic.
    rpc GetMagic(GetMagicRequest) returns (GetMagicResponse) {
        option (google.api.http) = {
            get: "/v1/magics/{magic_id}"
        };
    }

}

// ListMagicsRequest is the request model for ListMagics.
// TODO: pagination, sorting
message ListMagicsRequest {

    // Filter is an optional search query to limit results with.
    message Filter {

        // query is the actual search query.
        string query = 1;

    }

    // Filter is the optional search query to limit results with. 
    // (ex: "Fir" will return "Fire", "Fira", and "Firaga")
    Filter filter = 1;

}

// ListMagicsResponse is the response model for ListMagics.
message ListMagicsResponse {

    // magics is the list of magics.
    repeated Magic magics = 1;

}

// GetMagicRequest is the request model for GetMagic.
message GetMagicRequest {

    // magic_id is the ID of the magic to get.
    string magic_id = 1 [(validate.rules).string.uuid = true];

}

// GetMagicResponse is the response model for GetMagic.
message GetMagicResponse {

    // magic is the magic entity that was retrieved.
    Magic magic = 1;

}