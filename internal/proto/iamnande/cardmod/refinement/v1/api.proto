syntax = "proto3";

package iamnande.cardmod.refinement.v1;

import "iamnande/cardmod/refinement/v1/refinement.proto";
import "validate/validate.proto";

option go_package = "github.com/iamnande/cardmod/pkg/api/refinementv1;refinementv1";

// Refinement API Service.
service RefinementAPI {

    // Lists a collection of refinements.
    rpc ListRefinements(ListRefinementsRequest) returns (ListRefinementsResponse);

}

// Request schema for the ListRefinements request.
message ListRefinementsRequest {

    // Optional source and target refinement filtering.
    message Filter {

        // Filter by source.
        string source = 1 [(validate.rules).string = {
            pattern: "^[-, \\w]+$",
            min_len: 3,
            max_len: 25,
        }];

        // Filter by target.
        string target = 2 [(validate.rules).string = {
            pattern: "^[-, \\w]+$",
            min_len: 3,
            max_len: 25,
        }];

    }

    // Filter result set.
    Filter filter = 1;

}

// Response schema for the ListRefinements request.
message ListRefinementsResponse {

    // The collection of refinements
    repeated Refinement refinements = 1;

}