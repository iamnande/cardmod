// Code generated by MockGen. DO NOT EDIT.
// Source: card.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/iamnande/cardmod/internal/models"
)

// MockCardDAO is a mock of CardDAO interface.
type MockCardDAO struct {
	ctrl     *gomock.Controller
	recorder *MockCardDAOMockRecorder
}

// MockCardDAOMockRecorder is the mock recorder for MockCardDAO.
type MockCardDAOMockRecorder struct {
	mock *MockCardDAO
}

// NewMockCardDAO creates a new mock instance.
func NewMockCardDAO(ctrl *gomock.Controller) *MockCardDAO {
	mock := &MockCardDAO{ctrl: ctrl}
	mock.recorder = &MockCardDAOMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCardDAO) EXPECT() *MockCardDAOMockRecorder {
	return m.recorder
}

// GetCard mocks base method.
func (m *MockCardDAO) GetCard(ctx context.Context, name string) (models.Card, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCard", ctx, name)
	ret0, _ := ret[0].(models.Card)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCard indicates an expected call of GetCard.
func (mr *MockCardDAOMockRecorder) GetCard(ctx, name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCard", reflect.TypeOf((*MockCardDAO)(nil).GetCard), ctx, name)
}

// ListCards mocks base method.
func (m *MockCardDAO) ListCards(ctx context.Context) ([]models.Card, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListCards", ctx)
	ret0, _ := ret[0].([]models.Card)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListCards indicates an expected call of ListCards.
func (mr *MockCardDAOMockRecorder) ListCards(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListCards", reflect.TypeOf((*MockCardDAO)(nil).ListCards), ctx)
}
