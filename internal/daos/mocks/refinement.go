// Code generated by MockGen. DO NOT EDIT.
// Source: refinement.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/iamnande/cardmod/internal/models"
)

// MockRefinementDAO is a mock of RefinementDAO interface.
type MockRefinementDAO struct {
	ctrl     *gomock.Controller
	recorder *MockRefinementDAOMockRecorder
}

// MockRefinementDAOMockRecorder is the mock recorder for MockRefinementDAO.
type MockRefinementDAOMockRecorder struct {
	mock *MockRefinementDAO
}

// NewMockRefinementDAO creates a new mock instance.
func NewMockRefinementDAO(ctrl *gomock.Controller) *MockRefinementDAO {
	mock := &MockRefinementDAO{ctrl: ctrl}
	mock.recorder = &MockRefinementDAOMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRefinementDAO) EXPECT() *MockRefinementDAOMockRecorder {
	return m.recorder
}

// GetRefinement mocks base method.
func (m *MockRefinementDAO) GetRefinement(ctx context.Context, name string) (models.Refinement, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRefinement", ctx, name)
	ret0, _ := ret[0].(models.Refinement)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRefinement indicates an expected call of GetRefinement.
func (mr *MockRefinementDAOMockRecorder) GetRefinement(ctx, name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRefinement", reflect.TypeOf((*MockRefinementDAO)(nil).GetRefinement), ctx, name)
}

// ListRefinements mocks base method.
func (m *MockRefinementDAO) ListRefinements(ctx context.Context) ([]models.Refinement, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListRefinements", ctx)
	ret0, _ := ret[0].([]models.Refinement)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListRefinements indicates an expected call of ListRefinements.
func (mr *MockRefinementDAOMockRecorder) ListRefinements(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListRefinements", reflect.TypeOf((*MockRefinementDAO)(nil).ListRefinements), ctx)
}
