// Code generated by MockGen. DO NOT EDIT.
// Source: magic.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockMagic is a mock of Magic interface.
type MockMagic struct {
	ctrl     *gomock.Controller
	recorder *MockMagicMockRecorder
}

// MockMagicMockRecorder is the mock recorder for MockMagic.
type MockMagicMockRecorder struct {
	mock *MockMagic
}

// NewMockMagic creates a new mock instance.
func NewMockMagic(ctrl *gomock.Controller) *MockMagic {
	mock := &MockMagic{ctrl: ctrl}
	mock.recorder = &MockMagicMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMagic) EXPECT() *MockMagicMockRecorder {
	return m.recorder
}

// Name mocks base method.
func (m *MockMagic) Name() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Name")
	ret0, _ := ret[0].(string)
	return ret0
}

// Name indicates an expected call of Name.
func (mr *MockMagicMockRecorder) Name() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Name", reflect.TypeOf((*MockMagic)(nil).Name))
}

// Purpose mocks base method.
func (m *MockMagic) Purpose() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Purpose")
	ret0, _ := ret[0].(string)
	return ret0
}

// Purpose indicates an expected call of Purpose.
func (mr *MockMagicMockRecorder) Purpose() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Purpose", reflect.TypeOf((*MockMagic)(nil).Purpose))
}
