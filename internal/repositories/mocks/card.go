// Code generated by MockGen. DO NOT EDIT.
// Source: ../daos/card.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
	card "github.com/iamnande/cardmod/internal/domains/card"
)

// MockCardDAO is a mock of CardDAO interface.
type MockCardDAO struct {
	ctrl     *gomock.Controller
	recorder *MockCardDAOMockRecorder
}

// MockCardDAOMockRecorder is the mock recorder for MockCardDAO.
type MockCardDAOMockRecorder struct {
	mock *MockCardDAO
}

// NewMockCardDAO creates a new mock instance.
func NewMockCardDAO(ctrl *gomock.Controller) *MockCardDAO {
	mock := &MockCardDAO{ctrl: ctrl}
	mock.recorder = &MockCardDAOMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCardDAO) EXPECT() *MockCardDAOMockRecorder {
	return m.recorder
}

// CreateCard mocks base method.
func (m *MockCardDAO) CreateCard(ctx context.Context, name string) (card.Card, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateCard", ctx, name)
	ret0, _ := ret[0].(card.Card)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateCard indicates an expected call of CreateCard.
func (mr *MockCardDAOMockRecorder) CreateCard(ctx, name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateCard", reflect.TypeOf((*MockCardDAO)(nil).CreateCard), ctx, name)
}

// DeleteCard mocks base method.
func (m *MockCardDAO) DeleteCard(ctx context.Context, id uuid.UUID) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteCard", ctx, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteCard indicates an expected call of DeleteCard.
func (mr *MockCardDAOMockRecorder) DeleteCard(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteCard", reflect.TypeOf((*MockCardDAO)(nil).DeleteCard), ctx, id)
}

// GetCard mocks base method.
func (m *MockCardDAO) GetCard(ctx context.Context, id uuid.UUID) (card.Card, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCard", ctx, id)
	ret0, _ := ret[0].(card.Card)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCard indicates an expected call of GetCard.
func (mr *MockCardDAOMockRecorder) GetCard(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCard", reflect.TypeOf((*MockCardDAO)(nil).GetCard), ctx, id)
}

// ListCards mocks base method.
func (m *MockCardDAO) ListCards(ctx context.Context, search string) ([]card.Card, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListCards", ctx, search)
	ret0, _ := ret[0].([]card.Card)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListCards indicates an expected call of ListCards.
func (mr *MockCardDAOMockRecorder) ListCards(ctx, search interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListCards", reflect.TypeOf((*MockCardDAO)(nil).ListCards), ctx, search)
}
