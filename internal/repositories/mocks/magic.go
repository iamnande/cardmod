// Code generated by MockGen. DO NOT EDIT.
// Source: ../daos/magic.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
	magic "github.com/iamnande/cardmod/internal/domains/magic"
)

// MockMagicDAO is a mock of MagicDAO interface.
type MockMagicDAO struct {
	ctrl     *gomock.Controller
	recorder *MockMagicDAOMockRecorder
}

// MockMagicDAOMockRecorder is the mock recorder for MockMagicDAO.
type MockMagicDAOMockRecorder struct {
	mock *MockMagicDAO
}

// NewMockMagicDAO creates a new mock instance.
func NewMockMagicDAO(ctrl *gomock.Controller) *MockMagicDAO {
	mock := &MockMagicDAO{ctrl: ctrl}
	mock.recorder = &MockMagicDAOMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMagicDAO) EXPECT() *MockMagicDAOMockRecorder {
	return m.recorder
}

// CreateMagic mocks base method.
func (m *MockMagicDAO) CreateMagic(ctx context.Context, name string) (magic.Magic, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateMagic", ctx, name)
	ret0, _ := ret[0].(magic.Magic)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateMagic indicates an expected call of CreateMagic.
func (mr *MockMagicDAOMockRecorder) CreateMagic(ctx, name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateMagic", reflect.TypeOf((*MockMagicDAO)(nil).CreateMagic), ctx, name)
}

// DeleteMagic mocks base method.
func (m *MockMagicDAO) DeleteMagic(ctx context.Context, id uuid.UUID) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteMagic", ctx, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteMagic indicates an expected call of DeleteMagic.
func (mr *MockMagicDAOMockRecorder) DeleteMagic(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteMagic", reflect.TypeOf((*MockMagicDAO)(nil).DeleteMagic), ctx, id)
}

// GetMagic mocks base method.
func (m *MockMagicDAO) GetMagic(ctx context.Context, id uuid.UUID) (magic.Magic, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMagic", ctx, id)
	ret0, _ := ret[0].(magic.Magic)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMagic indicates an expected call of GetMagic.
func (mr *MockMagicDAOMockRecorder) GetMagic(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMagic", reflect.TypeOf((*MockMagicDAO)(nil).GetMagic), ctx, id)
}

// ListMagics mocks base method.
func (m *MockMagicDAO) ListMagics(ctx context.Context, search string) ([]magic.Magic, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListMagics", ctx, search)
	ret0, _ := ret[0].([]magic.Magic)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListMagics indicates an expected call of ListMagics.
func (mr *MockMagicDAOMockRecorder) ListMagics(ctx, search interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListMagics", reflect.TypeOf((*MockMagicDAO)(nil).ListMagics), ctx, search)
}
