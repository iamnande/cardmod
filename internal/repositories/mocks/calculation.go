// Code generated by MockGen. DO NOT EDIT.
// Source: ../daos/calculation.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
	calculation "github.com/iamnande/cardmod/internal/domains/calculation"
)

// MockCalculationDAO is a mock of CalculationDAO interface.
type MockCalculationDAO struct {
	ctrl     *gomock.Controller
	recorder *MockCalculationDAOMockRecorder
}

// MockCalculationDAOMockRecorder is the mock recorder for MockCalculationDAO.
type MockCalculationDAOMockRecorder struct {
	mock *MockCalculationDAO
}

// NewMockCalculationDAO creates a new mock instance.
func NewMockCalculationDAO(ctrl *gomock.Controller) *MockCalculationDAO {
	mock := &MockCalculationDAO{ctrl: ctrl}
	mock.recorder = &MockCalculationDAOMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCalculationDAO) EXPECT() *MockCalculationDAOMockRecorder {
	return m.recorder
}

// CreateCalculation mocks base method.
func (m *MockCalculationDAO) CreateCalculation(ctx context.Context, cardID, magicID uuid.UUID, cardRatio, magicRatio int32) (calculation.Calculation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateCalculation", ctx, cardID, magicID, cardRatio, magicRatio)
	ret0, _ := ret[0].(calculation.Calculation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateCalculation indicates an expected call of CreateCalculation.
func (mr *MockCalculationDAOMockRecorder) CreateCalculation(ctx, cardID, magicID, cardRatio, magicRatio interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateCalculation", reflect.TypeOf((*MockCalculationDAO)(nil).CreateCalculation), ctx, cardID, magicID, cardRatio, magicRatio)
}

// ListCalculations mocks base method.
func (m *MockCalculationDAO) ListCalculations(ctx context.Context, search string) ([]calculation.Calculation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListCalculations", ctx, search)
	ret0, _ := ret[0].([]calculation.Calculation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListCalculations indicates an expected call of ListCalculations.
func (mr *MockCalculationDAOMockRecorder) ListCalculations(ctx, search interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListCalculations", reflect.TypeOf((*MockCalculationDAO)(nil).ListCalculations), ctx, search)
}
