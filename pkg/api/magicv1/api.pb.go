// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: iamnande/cardmod/magic/v1/api.proto

package magicv1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ListMagicsRequest is the request model for ListMagics.
// TODO: pagination, filtering, sorting
type ListMagicsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListMagicsRequest) Reset() {
	*x = ListMagicsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iamnande_cardmod_magic_v1_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMagicsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMagicsRequest) ProtoMessage() {}

func (x *ListMagicsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iamnande_cardmod_magic_v1_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMagicsRequest.ProtoReflect.Descriptor instead.
func (*ListMagicsRequest) Descriptor() ([]byte, []int) {
	return file_iamnande_cardmod_magic_v1_api_proto_rawDescGZIP(), []int{0}
}

// ListMagicsResponse is the response model for ListMagics.
type ListMagicsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// magics is the list of magics.
	Magics []*Magic `protobuf:"bytes,1,rep,name=magics,proto3" json:"magics,omitempty"`
}

func (x *ListMagicsResponse) Reset() {
	*x = ListMagicsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iamnande_cardmod_magic_v1_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMagicsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMagicsResponse) ProtoMessage() {}

func (x *ListMagicsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iamnande_cardmod_magic_v1_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMagicsResponse.ProtoReflect.Descriptor instead.
func (*ListMagicsResponse) Descriptor() ([]byte, []int) {
	return file_iamnande_cardmod_magic_v1_api_proto_rawDescGZIP(), []int{1}
}

func (x *ListMagicsResponse) GetMagics() []*Magic {
	if x != nil {
		return x.Magics
	}
	return nil
}

// CreateMagicRequest is the request model for CreateMagic.
type CreateMagicRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name is the name of the card.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CreateMagicRequest) Reset() {
	*x = CreateMagicRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iamnande_cardmod_magic_v1_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMagicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMagicRequest) ProtoMessage() {}

func (x *CreateMagicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iamnande_cardmod_magic_v1_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMagicRequest.ProtoReflect.Descriptor instead.
func (*CreateMagicRequest) Descriptor() ([]byte, []int) {
	return file_iamnande_cardmod_magic_v1_api_proto_rawDescGZIP(), []int{2}
}

func (x *CreateMagicRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// CreateMagicResponse is the response model for CreateMagic.
type CreateMagicResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// magic is the magice entity that was created.
	Magic *Magic `protobuf:"bytes,1,opt,name=magic,proto3" json:"magic,omitempty"`
}

func (x *CreateMagicResponse) Reset() {
	*x = CreateMagicResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iamnande_cardmod_magic_v1_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMagicResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMagicResponse) ProtoMessage() {}

func (x *CreateMagicResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iamnande_cardmod_magic_v1_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMagicResponse.ProtoReflect.Descriptor instead.
func (*CreateMagicResponse) Descriptor() ([]byte, []int) {
	return file_iamnande_cardmod_magic_v1_api_proto_rawDescGZIP(), []int{3}
}

func (x *CreateMagicResponse) GetMagic() *Magic {
	if x != nil {
		return x.Magic
	}
	return nil
}

// DescribeMagicRequest is the request model for DescribeMagic.
type DescribeMagicRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// magic_id is the ID of the magic to describe.
	MagicId string `protobuf:"bytes,1,opt,name=magic_id,json=magicId,proto3" json:"magic_id,omitempty"`
}

func (x *DescribeMagicRequest) Reset() {
	*x = DescribeMagicRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iamnande_cardmod_magic_v1_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeMagicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeMagicRequest) ProtoMessage() {}

func (x *DescribeMagicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iamnande_cardmod_magic_v1_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeMagicRequest.ProtoReflect.Descriptor instead.
func (*DescribeMagicRequest) Descriptor() ([]byte, []int) {
	return file_iamnande_cardmod_magic_v1_api_proto_rawDescGZIP(), []int{4}
}

func (x *DescribeMagicRequest) GetMagicId() string {
	if x != nil {
		return x.MagicId
	}
	return ""
}

// DescribeMagicResponse is the response model for DescribeMagic.
type DescribeMagicResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// magic is the magic entity that was described.
	Magic *Magic `protobuf:"bytes,1,opt,name=magic,proto3" json:"magic,omitempty"`
}

func (x *DescribeMagicResponse) Reset() {
	*x = DescribeMagicResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iamnande_cardmod_magic_v1_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeMagicResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeMagicResponse) ProtoMessage() {}

func (x *DescribeMagicResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iamnande_cardmod_magic_v1_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeMagicResponse.ProtoReflect.Descriptor instead.
func (*DescribeMagicResponse) Descriptor() ([]byte, []int) {
	return file_iamnande_cardmod_magic_v1_api_proto_rawDescGZIP(), []int{5}
}

func (x *DescribeMagicResponse) GetMagic() *Magic {
	if x != nil {
		return x.Magic
	}
	return nil
}

// DeleteMagicRequest is the request model for DeleteMagic.
type DeleteMagicRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// magic_id is the ID of the magic to delete.
	MagicId string `protobuf:"bytes,1,opt,name=magic_id,json=magicId,proto3" json:"magic_id,omitempty"`
}

func (x *DeleteMagicRequest) Reset() {
	*x = DeleteMagicRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iamnande_cardmod_magic_v1_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMagicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMagicRequest) ProtoMessage() {}

func (x *DeleteMagicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iamnande_cardmod_magic_v1_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMagicRequest.ProtoReflect.Descriptor instead.
func (*DeleteMagicRequest) Descriptor() ([]byte, []int) {
	return file_iamnande_cardmod_magic_v1_api_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteMagicRequest) GetMagicId() string {
	if x != nil {
		return x.MagicId
	}
	return ""
}

// DeleteMagicResponse is the response model for DeleteMagic.
type DeleteMagicResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteMagicResponse) Reset() {
	*x = DeleteMagicResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iamnande_cardmod_magic_v1_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMagicResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMagicResponse) ProtoMessage() {}

func (x *DeleteMagicResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iamnande_cardmod_magic_v1_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMagicResponse.ProtoReflect.Descriptor instead.
func (*DeleteMagicResponse) Descriptor() ([]byte, []int) {
	return file_iamnande_cardmod_magic_v1_api_proto_rawDescGZIP(), []int{7}
}

var File_iamnande_cardmod_magic_v1_api_proto protoreflect.FileDescriptor

var file_iamnande_cardmod_magic_v1_api_proto_rawDesc = []byte{
	0x0a, 0x23, 0x69, 0x61, 0x6d, 0x6e, 0x61, 0x6e, 0x64, 0x65, 0x2f, 0x63, 0x61, 0x72, 0x64, 0x6d,
	0x6f, 0x64, 0x2f, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x69, 0x61, 0x6d, 0x6e, 0x61, 0x6e, 0x64, 0x65, 0x2e,
	0x63, 0x61, 0x72, 0x64, 0x6d, 0x6f, 0x64, 0x2e, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x2e, 0x76, 0x31,
	0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x69, 0x61, 0x6d, 0x6e, 0x61, 0x6e, 0x64,
	0x65, 0x2f, 0x63, 0x61, 0x72, 0x64, 0x6d, 0x6f, 0x64, 0x2f, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x2f,
	0x76, 0x31, 0x2f, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x13,
	0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x4e, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x67, 0x69, 0x63,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x6d, 0x61, 0x67,
	0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x69, 0x61, 0x6d, 0x6e,
	0x61, 0x6e, 0x64, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x6d, 0x6f, 0x64, 0x2e, 0x6d, 0x61, 0x67,
	0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x52, 0x06, 0x6d, 0x61, 0x67,
	0x69, 0x63, 0x73, 0x22, 0x28, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x67,
	0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x4d, 0x0a,
	0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x05, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x69, 0x61, 0x6d, 0x6e, 0x61, 0x6e, 0x64, 0x65, 0x2e, 0x63,
	0x61, 0x72, 0x64, 0x6d, 0x6f, 0x64, 0x2e, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x61, 0x67, 0x69, 0x63, 0x52, 0x05, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x22, 0x3b, 0x0a, 0x14,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x08, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01,
	0x52, 0x07, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x49, 0x64, 0x22, 0x4f, 0x0a, 0x15, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x36, 0x0a, 0x05, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x69, 0x61, 0x6d, 0x6e, 0x61, 0x6e, 0x64, 0x65, 0x2e, 0x63, 0x61, 0x72,
	0x64, 0x6d, 0x6f, 0x64, 0x2e, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61,
	0x67, 0x69, 0x63, 0x52, 0x05, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x22, 0x39, 0x0a, 0x12, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x23, 0x0a, 0x08, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x07, 0x6d, 0x61,
	0x67, 0x69, 0x63, 0x49, 0x64, 0x22, 0x15, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d,
	0x61, 0x67, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xb1, 0x04, 0x0a,
	0x08, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x41, 0x50, 0x49, 0x12, 0x7d, 0x0a, 0x0a, 0x4c, 0x69, 0x73,
	0x74, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x73, 0x12, 0x2c, 0x2e, 0x69, 0x61, 0x6d, 0x6e, 0x61, 0x6e,
	0x64, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x6d, 0x6f, 0x64, 0x2e, 0x6d, 0x61, 0x67, 0x69, 0x63,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x69, 0x61, 0x6d, 0x6e, 0x61, 0x6e, 0x64, 0x65,
	0x2e, 0x63, 0x61, 0x72, 0x64, 0x6d, 0x6f, 0x64, 0x2e, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x12, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x12, 0x0a, 0x2f, 0x76,
	0x31, 0x2f, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x73, 0x12, 0x83, 0x01, 0x0a, 0x0b, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x12, 0x2d, 0x2e, 0x69, 0x61, 0x6d, 0x6e, 0x61,
	0x6e, 0x64, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x6d, 0x6f, 0x64, 0x2e, 0x6d, 0x61, 0x67, 0x69,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x67, 0x69, 0x63,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x69, 0x61, 0x6d, 0x6e, 0x61, 0x6e,
	0x64, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x6d, 0x6f, 0x64, 0x2e, 0x6d, 0x61, 0x67, 0x69, 0x63,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x22,
	0x0a, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x91,
	0x01, 0x0a, 0x0d, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4d, 0x61, 0x67, 0x69, 0x63,
	0x12, 0x2f, 0x2e, 0x69, 0x61, 0x6d, 0x6e, 0x61, 0x6e, 0x64, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64,
	0x6d, 0x6f, 0x64, 0x2e, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x30, 0x2e, 0x69, 0x61, 0x6d, 0x6e, 0x61, 0x6e, 0x64, 0x65, 0x2e, 0x63, 0x61, 0x72,
	0x64, 0x6d, 0x6f, 0x64, 0x2e, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x12, 0x15, 0x2f, 0x76, 0x31,
	0x2f, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x73, 0x2f, 0x7b, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x5f, 0x69,
	0x64, 0x7d, 0x12, 0x8b, 0x01, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61, 0x67,
	0x69, 0x63, 0x12, 0x2d, 0x2e, 0x69, 0x61, 0x6d, 0x6e, 0x61, 0x6e, 0x64, 0x65, 0x2e, 0x63, 0x61,
	0x72, 0x64, 0x6d, 0x6f, 0x64, 0x2e, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2e, 0x2e, 0x69, 0x61, 0x6d, 0x6e, 0x61, 0x6e, 0x64, 0x65, 0x2e, 0x63, 0x61, 0x72,
	0x64, 0x6d, 0x6f, 0x64, 0x2e, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x2a, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x6d,
	0x61, 0x67, 0x69, 0x63, 0x73, 0x2f, 0x7b, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x7d,
	0x42, 0x35, 0x5a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69,
	0x61, 0x6d, 0x6e, 0x61, 0x6e, 0x64, 0x65, 0x2f, 0x63, 0x61, 0x72, 0x64, 0x6d, 0x6f, 0x64, 0x2f,
	0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x76, 0x31, 0x3b,
	0x6d, 0x61, 0x67, 0x69, 0x63, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_iamnande_cardmod_magic_v1_api_proto_rawDescOnce sync.Once
	file_iamnande_cardmod_magic_v1_api_proto_rawDescData = file_iamnande_cardmod_magic_v1_api_proto_rawDesc
)

func file_iamnande_cardmod_magic_v1_api_proto_rawDescGZIP() []byte {
	file_iamnande_cardmod_magic_v1_api_proto_rawDescOnce.Do(func() {
		file_iamnande_cardmod_magic_v1_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_iamnande_cardmod_magic_v1_api_proto_rawDescData)
	})
	return file_iamnande_cardmod_magic_v1_api_proto_rawDescData
}

var file_iamnande_cardmod_magic_v1_api_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_iamnande_cardmod_magic_v1_api_proto_goTypes = []interface{}{
	(*ListMagicsRequest)(nil),     // 0: iamnande.cardmod.magic.v1.ListMagicsRequest
	(*ListMagicsResponse)(nil),    // 1: iamnande.cardmod.magic.v1.ListMagicsResponse
	(*CreateMagicRequest)(nil),    // 2: iamnande.cardmod.magic.v1.CreateMagicRequest
	(*CreateMagicResponse)(nil),   // 3: iamnande.cardmod.magic.v1.CreateMagicResponse
	(*DescribeMagicRequest)(nil),  // 4: iamnande.cardmod.magic.v1.DescribeMagicRequest
	(*DescribeMagicResponse)(nil), // 5: iamnande.cardmod.magic.v1.DescribeMagicResponse
	(*DeleteMagicRequest)(nil),    // 6: iamnande.cardmod.magic.v1.DeleteMagicRequest
	(*DeleteMagicResponse)(nil),   // 7: iamnande.cardmod.magic.v1.DeleteMagicResponse
	(*Magic)(nil),                 // 8: iamnande.cardmod.magic.v1.Magic
}
var file_iamnande_cardmod_magic_v1_api_proto_depIdxs = []int32{
	8, // 0: iamnande.cardmod.magic.v1.ListMagicsResponse.magics:type_name -> iamnande.cardmod.magic.v1.Magic
	8, // 1: iamnande.cardmod.magic.v1.CreateMagicResponse.magic:type_name -> iamnande.cardmod.magic.v1.Magic
	8, // 2: iamnande.cardmod.magic.v1.DescribeMagicResponse.magic:type_name -> iamnande.cardmod.magic.v1.Magic
	0, // 3: iamnande.cardmod.magic.v1.MagicAPI.ListMagics:input_type -> iamnande.cardmod.magic.v1.ListMagicsRequest
	2, // 4: iamnande.cardmod.magic.v1.MagicAPI.CreateMagic:input_type -> iamnande.cardmod.magic.v1.CreateMagicRequest
	4, // 5: iamnande.cardmod.magic.v1.MagicAPI.DescribeMagic:input_type -> iamnande.cardmod.magic.v1.DescribeMagicRequest
	6, // 6: iamnande.cardmod.magic.v1.MagicAPI.DeleteMagic:input_type -> iamnande.cardmod.magic.v1.DeleteMagicRequest
	1, // 7: iamnande.cardmod.magic.v1.MagicAPI.ListMagics:output_type -> iamnande.cardmod.magic.v1.ListMagicsResponse
	3, // 8: iamnande.cardmod.magic.v1.MagicAPI.CreateMagic:output_type -> iamnande.cardmod.magic.v1.CreateMagicResponse
	5, // 9: iamnande.cardmod.magic.v1.MagicAPI.DescribeMagic:output_type -> iamnande.cardmod.magic.v1.DescribeMagicResponse
	7, // 10: iamnande.cardmod.magic.v1.MagicAPI.DeleteMagic:output_type -> iamnande.cardmod.magic.v1.DeleteMagicResponse
	7, // [7:11] is the sub-list for method output_type
	3, // [3:7] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_iamnande_cardmod_magic_v1_api_proto_init() }
func file_iamnande_cardmod_magic_v1_api_proto_init() {
	if File_iamnande_cardmod_magic_v1_api_proto != nil {
		return
	}
	file_iamnande_cardmod_magic_v1_magic_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_iamnande_cardmod_magic_v1_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMagicsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iamnande_cardmod_magic_v1_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMagicsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iamnande_cardmod_magic_v1_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMagicRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iamnande_cardmod_magic_v1_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMagicResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iamnande_cardmod_magic_v1_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeMagicRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iamnande_cardmod_magic_v1_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeMagicResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iamnande_cardmod_magic_v1_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMagicRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iamnande_cardmod_magic_v1_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMagicResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_iamnande_cardmod_magic_v1_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_iamnande_cardmod_magic_v1_api_proto_goTypes,
		DependencyIndexes: file_iamnande_cardmod_magic_v1_api_proto_depIdxs,
		MessageInfos:      file_iamnande_cardmod_magic_v1_api_proto_msgTypes,
	}.Build()
	File_iamnande_cardmod_magic_v1_api_proto = out.File
	file_iamnande_cardmod_magic_v1_api_proto_rawDesc = nil
	file_iamnande_cardmod_magic_v1_api_proto_goTypes = nil
	file_iamnande_cardmod_magic_v1_api_proto_depIdxs = nil
}
